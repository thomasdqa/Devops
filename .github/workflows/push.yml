name: Pushes to non-main

on:
  push:
    branches-ignore:
      - "main"

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    needs: dependency-scan
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          cd Flask-agile
          python -m pip install --upgrade pip
          python3 -m pip install pytest
          sudo apt-get install sqlite3
          python3 -m pip install -r requirements.txt
      - name: Set up Test env
        run: |
          cd flask-agile
      - name: Run Pytest
        run: |
          cd flask-agile
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Build Docker container
        run: |
         cd Flask-agile
          docker build -f Dockerfile -t my-docker-image:latest .
      - name: Tag Docker image
        run: |
          docker tag my-docker-image:latest my-docker-image:0.0.1
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ["python"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{matrix.language}}"

  dependency-scan:
    runs-on: ubuntu-latest
    env:
      SAFETY_DOCKER_IMAGE: my_custom_image_name:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          cd Flask-agile
      # Scans the Python env setup by setup-python.
      - uses: pyupio/safety@2.3.4
        with:
          api-key: c8fd6fad-d84eb971-53700f9d-62f2acdd
          scan: "env"
          args: "-i 51457 -i 52495"

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
      - name: Analysing the code with pylint
        run: |
          pylint $(git ls-files '*.py')
